-----------------------------------------------------------------------------push and pull command-----------------------------------------------------
git remote add origin "https://github.com/snarendevops/Testing.git"
git pull
git pull origin main
git pull origin main --allow-unrelated-histories
git add .
git commit -m "added files"
git push origin main

-----------------------------------------------------------------------------create branch & merge----------------------------------------------------
Branching is just a pointer, it will not need any storage.
when create the new branch all the files can be appear in new branch as well.
git branch dev                  ------to create
git checkout dev                ------to connect
git branch                      ------to list branches from local
git branch -a                   ------to list branches from local as well repository
git branch -m dev development   ------rename branch
git branch -d development       ------delete branch
git commit -am "auto mering added files"
git checkout -b newb            ------To create and checkout to new branch
NOTE:- If any commit conflicts then those need to be fix by manually.
Until merge the changes if created in dev will not be available to main branch
git push origin dev
merging dev to master connect master branch and then execute below command.
git checkout main
git merge dev
git push origin main
-------------------------------------------------------reverting staging to working area--------------------------------------------------------------
git reset HEAD "File name"
git reset HEAD~                   ------Revert the last commit-
We can revert the changes based on commit id as well

git checkout -- test.txt ----------Its remove the added code in the file means in working area
git reset remove the new changes from the stage area
-------------------------------------------------------delete and rename files------------------------------------------------------------------------
git rm "filename"                   -- for removing
gir reset "filename"                -- for revert from stage area
gir checkout "filename"             -- for reverting in working area
git mv "filename" "filename"        -- for renaming
gir reset "filename"                -- for revert from stage area
gir checkout "filename"             -- for reverting in working area
-------------------------------------------------------git log----------------------------------------------------------------------------------------
git help log
git log --oneline --graph --decorate
git log --since="2 days ago"                             --------Log for specific days
git log -- testing.txt                                   --------Log on specific file
git show 3f0eef8a4e218575e3d766f138693affb1620cb2        --------Log on commit id
-------------------------------------------------------git alias--------------------------------------------------------------------------------------
git config --global alias.c commit
git config --list
c = commit
git c -m "example"
-------------------------------------------------------git ignore-------------------------------------------------------------------------------------
*.log
-------------------------------------------------------compare commits--------------------------------------------------------------------------------
git diff "first commit id" "secound commit id"
git diff HEAD HEAD-1
git diff master main    --to compare the code between two branches